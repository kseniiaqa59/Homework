1. Создать внешний репозиторий c названием JSON.
git@github.com:kseniiaqa59/JSON.git

 2. Клонировать репозиторий JSON на локальный компьютер.
git clone git@github.com:kseniiaqa59/JSON.git

 3. Внутри локального JSON создать файл “new.json”.
touch new.json

 4. Добавить файл под гит.
git add new.json

 5. Закоммитить файл.
git commit -m "add new"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
{
    "name": "Arendarenko Kseniia Vladimirovna",
    "age": 32,
    "count_pets": 2,
    "salary": "5000$"
}
 8. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "add changes2"
git push

 9. Создать файл preferences.json
touch preferences.json

 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
{
    "Favorite movie": "Green Mile",
    "Favorite series": "Peaky Blinders",
    "Favorite food": "Crayfish",
    "Favorite season": "Summer",
    "Country i would like to visit": "France"
}
Shift +zz
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch skills.json

 12. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json
git commit -m "for 2"
git push

 13. На веб интерфейсе создать файл bug_report.json.


 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 17. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML **********************************************

 18. Создать внешний репозиторий c названием XML.

 19. Клонировать репозиторий XML на локальный компьютер.
git clone git@github.com:kseniiaqa59/XML.git

 20. Внутри локального XML создать файл “new.xml”.
touch new.xml

 21. Добавить файл под гит.
git add new.xml

 22. Закоммитить файл.
git commit -m "for xml"

 23. Отправить файл на внешний GitHub репозиторий.
git push

 24. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
<about>
    <me>
        <name>Arendarenko_Kseniia_Vladimirovna</name>
        <age>32</age>
        <count_pets>2</coount_pets>
        <salary>5000</salary>
    </me>
</about>

 25. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m "for xml2"
git push

 26. Создать файл preferences.xml
touch preferences.xml

 27. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
<preferences>
    <my_preferences>
        <Favorite_movie>Green Mile</Favorite_movie>
        <Favorite_series>Peaky Blinders</Favorite_series>
        <Favorite_food>Crayfish</Favorite_food>
        <Favorite_season>Summer</Favorite_season>
        <Country_i_would_like_to_visit>France</Country_i_would_like_to_visit>
    </my_preferences>
</preferences>

 28. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
vim skills.xml
<skills>
    <skill_course>
        <skill_1>Basic theory</skill_1>
        <skill_2>What is client-server architecture</skill_2>
        <skill_3>HTTP Request methods to the server</skill_3>
        <skill_4>HTTP server response codes</skill_4>
        <skill_5>Structures of HTTP requests and responses</skill_5>
        <skill_6>json, xml</skill_6>
        <skill_7>API Testing with Postman</skill_7>
        <skill_8>Removing and reading logs from an external server</skill_8>
        <skill_9>Sniffing http web traffic with Charles and Fiddler</skill_9>
        <skill_10>Dev Tools for web browsers (Google Chrome, FireFox)</skill_10>
        <skill_11>VPN</skill_11>
        <skill_12>Mobile testing</skill_12>
        <skill_13>Feature iOS, Android, guidelines</skill_13>
        <skill_14>Building iOS applications on Xcode</skill_14>
        <skill_15>Building Android Applications with Android Studio</skill_15>
        <skill_16>Setting up proxy and vpn on iOS and Android</skill_16>
        <skill_17>Interception (sniffing) of mobile traffic via Charles and Fiddler on iOS and Android</skill_17>
        <skill_18>Linux command line (terminal)</skill_18>
        <skill_19>bash basics</skill_19>
        <skill_20>Access to remote servers</skill_20>
        <skill_21>SQL Basics</skill_21>
        <skill_22>Postgres database</skill_22>
        <skill_23>Redis non-relational database</skill_23>
        <skill_24>Load testing in Jmeter</skill_24>
        <skill_25>Scrum development methodology</skill_25>
        <skill_26>Test Design Techniques</skill_26>
        <skill_27>Python</skill_27>
    </skill_course>
</skills>

 29. Сделать коммит в одну строку.
git commit -ma "for skills pref"

 30. Отправить сразу 2 файла на внешний репозиторий.
git push

 31. На веб интерфейсе создать файл bug_report.xml.

 32. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 33. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<bug_report>
    <BR1>
        <Id>BR1</Id>
        <Summary>The language of the page on the Login and Registration pages does not change</Summary>
        <Pre-conditions>Open the site https://exe.ua/,The user must not be logged in</Pre-conditions> 
         <Steps>
             <st1>Click on the login button</st1>
             <st2>Click on the  button 'Ukr' t in the upper right part of the page</st2>
             <st3>Click on the button 'Eng'  in the upper right part of the page</st3>
             <st4>Click on the button 'registration' in the upper right part of the page</st4>
             <st6>Click on the button 'Ukr' in the upper right part of the page</st6>
             <st7>Click on the button 'Eng' in the upper right part of the page</st7>
        </Steps>
        <Expected_result>The page must be translated into the appropriate language</Expected_result>
        <Actual_result>Changing the localization does not work</Actual_result>
        <Post-condition>null</Post-condition>
        <Environment>Version 112.0.5615.49 (Official Build) (x86_64), all browsers</Environment>
        <Severity>Low</Severity>
        <Priority>Low</Priority>
        <Type_of_bug>Localization</Type_of_bug>
        <Attachment>Add attachment</Attachment>
    </BR1>
</bug_report>
 34. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click "Commit changes"

 35. Синхронизировать внешний и локальный репозиторий XML
git fetch
git pull

TXT
 36. Создать внешний репозиторий c названием TXT.
git@github.com:kseniiaqa59/TXT.git
 37. Клонировать репозиторий TXT на локальный компьютер.
git clone git@github.com:kseniiaqa59/TXT.git

 38. Внутри локального TXT создать файл “new.txt”.

 39. Добавить файл под гит.
git add new1.txt

 40. Закоммитить файл.
git commit -m "for txt"

 41. Отправить файл на внешний GitHub репозиторий.
git push

 42. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new1.txt

 43. Отправить изменения на внешний репозиторий.
git add new1.txt
git commit -m "for txt"
git push


 44. Создать файл preferences.txt
touch preferences.txt

 45. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt

 46. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
vim skills.txt

 47. Сделать коммит в одну строку.

git commit -ma "for sk pr"

 48. Отправить сразу 2 файла на внешний репозиторий.
git push

 49. На веб интерфейсе создать файл bug_report.txt.

 50. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click "Commit changes"

 51. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

 52. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click "Commit changes"

 53. Синхронизировать внешний и локальный репозиторий TXT
git fetch
git pull
